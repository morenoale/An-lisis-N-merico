% Metodo Secante
function x=secante(f,x0,x1,n)
y0=f(x0)
y1=f(x1)
for i=1:n;
    x=x1- (x1-x0)*y1/(y1-y0)
    disp([i,x]);
    x0=x1
    y0=y1
    x1=x
    y1=f(x)
end
end





% Metodo Secante con algoritmo de Burden 
function p=secburden(f,p0,p1,n, tol)
q0=f(p0);
q1=f(p1);
    for i=1:n
    p=p1 - q1*(p1-p0)/(q1-q0)
    disp([i, p]);
    p0=p1;
    q0=q1;
    p1=p;
    q1=f(p);
end
end






% Metodo Secante con tolerancia y error

function x=secante2(f,x0,x1,n, tol)
y0=f(x0);
y1=f(x1);
i=1
while abs(x1-x0)>tol %Cuando el valor absoluto de la diferencia entre la iteracion x0 y x1, el programa se detendra. 
    x=x1- (x1-x0)*y1/(y1-y0) % Formula del metodo de la secante
    disp([i, x]); % Imprimir el valor de i y de x
    x0=x1 % El valor x0 se ira actualizando, por el valor x1
    y0=y1 % El valor y0, ahora tomara el valor de y1
    x1=x % El valor x1 ahora tomara el valor final x (Actual). 
    y1=f(x) 
    i=1+i; % Va aumentando el numero de la iteracion.
end
end




% VENTANA DE COMANDOS 
f=@(x)cos(x)-(x)
x=secante2(f,0.5,pi/2,10,0)
